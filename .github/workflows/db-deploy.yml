name: DB CI/CD with Docker 
on:
  workflow_dispatch

jobs:
  # build-and-deploy-web:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Docker
  #       uses: docker/setup-buildx-action@v2

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
      
  #     - name: Build and push docker image
  #       uses: docker/build-push-action@v2
  #       with: 
  #         context: ./web-server
  #         build-args: |
  #           "NEXT_PUBLIC_HAUS64_BACKEND=${{ secrets.NEXT_PUBLIC_HAUS64_BACKEND }}"
  #         push: true
  #         tags: ${{ secrets.DOCKERHUB_USERNAME }}/auengauey-diary-backend-web:latest

  #     - name: Deploy to Ubuntu server
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{secrets.EC2_HOST}}
  #         username: ${{secrets.EC2_USERNAME}}
  #         key: ${{ secrets.EC2_PRIVATE_KEY }}
  #         script: |
  #           docker stop web-service || true
  #           docker rm  web-service || true
  #           docker pull ${{ secrets.DOCKERHUB_USERNAME }}/auengauey-diary-backend-web:latest
  #           docker run -d -p 3000:3000 \
  #             --name web-service \
  #             ${{ secrets.DOCKERHUB_USERNAME }}/auengauey-diary-backend-web:latest

  build-and-deploy-db:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with: 
          context: ./maria-db
          file: ./maria-db/Dockerfile
          build-args: |
            "MYSQL_ROOT_PASSWORD=${{secrets.DB_ROOT_PASSWORD}}"
            "MYSQL_DATABASE=${{secrets.DB_NAME}}"
            "MYSQL_USER=${{secrets.DB_USER}}"
            "MYSQL_PASSWORD=${{secrets.DB_PASSWORD}}"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/auengauey-diary-backend-db:latest

      - name: Deploy DB container
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USERNAME}}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            docker stop database-service || true
            docker rm database-service || true
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/auengauey-diary-backend-db:latest
            docker run -d -p 80:80 \
              --name database-service \
              ${{ secrets.DOCKERHUB_USERNAME }}/auengauey-diary-backend-db:latest
  
  # build-redis:
  #   runs-on: ubuntu-latest
  #   steps:
  #       - name: Deploy Reids container
  #         uses: appleboy/ssh-action@master
  #         with:
  #           host: ${{secrets.EC2_HOST}}
  #           username: ${{secrets.EC2_USERNAME}}
  #           key: ${{ secrets.EC2_PRIVATE_KEY }}
  #           script: |
  #             docker stop redis_session || true
  #             docker rm redis_session || true
  #             docker pull redis:6.0.20-alpine
  #             docker run -d -p 6379:6379 \
  #               --name redis_session \
  #               redis:6.0.20-alpine
  